AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This stack is meant to be manually created in the AWS Console by referring to
  the uploaded template in the ArtifactBucket.  Creates the BuildChangeSet
  codebuild resource that is used to create a change set from uploaded artifacts
  in a S3 bucket.

Metadata:
  Author: Jake Hickenlooper

Parameters:

  ProjectSlug:
    Type: String
    Description: >
      A one word name of the project. Used as part of the object key name for
      uploaded cloudformation templates and parameter JSON files.

      Will be used for root object name in
      buckets and other places. The Parameter Store in AWS Systems Manager will
      use this as the prefix (like /weboftomorrow/) for parameters.
    Default: "weboftomorrow"
    AllowedPattern: "[a-z0-9]+"
    MinLength: 3
    MaxLength: 50

  GitHubCloneURL:
    Type: String
    Description: >
      The https clone URL for the project.
    Default: ""

  ManualVerificationEmail:
    Type: String
    Description: >
      Email address to send a notification to when the staging site needs to be
      manually verified.
    Default: ""


Resources:

  BuildChangeSetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      RoleName: !Sub "${ProjectSlug}-BuildChangeSetRole"

  BuildChangeSetPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${ProjectSlug}-BuildChangeSetPolicy"
      Roles:
        - !Ref BuildChangeSetRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - "cloudformation:DescribeStackInstance"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:DescribeStacks"
            Resource:
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectSlug}-*/*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/${ProjectSlug}-*:*"
          -
            Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:ListBucket"
            Resource:
              - !Sub
                  - "arn:aws:s3:::${artifactBucket}/cloudformation/source-templates/${ProjectSlug}/*"
                  -
                    artifactBucket:
                      Fn::ImportValue: "root-ArtifactBucket"

          -
            Effect: Allow
            Action:
              - "s3:ListBucket"
            Resource:
              - !Sub
                  - "arn:aws:s3:::${artifactBucket}"
                  -
                    artifactBucket:
                      Fn::ImportValue: "root-ArtifactBucket"
          -
            Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
            Resource:
              - !Sub
                  - "arn:aws:s3:::${artifactBucket}/cloudformation/package-templates/${ProjectSlug}/*"
                  -
                    artifactBucket:
                      Fn::ImportValue: "root-ArtifactBucket"
          -
            Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-BuildChangeSet:log-stream:*"
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-BuildChangeSet"

  BuildChangeSet:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub "${ProjectSlug}-BuildChangeSet"
      Artifacts:
        Type: NO_ARTIFACTS
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "${ProjectSlug}-BuildChangeSet"
          Status: ENABLED
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          -
            Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value:
              Fn::ImportValue: "root-ArtifactBucket"
          -
            Name: STACK_NAME
            Type: PLAINTEXT
            Value: !Ref ProjectSlug
          -
            Name: REGION
            Type: PLAINTEXT
            Value: !Ref "AWS::Region"
      QueuedTimeoutInMinutes: 10
      ServiceRole: !GetAtt BuildChangeSetRole.Arn
      TimeoutInMinutes: 10
      Source:
        Location: !Sub
          - "${artifactBucket}/cloudformation/source-templates/${ProjectSlug}/"
          -
            artifactBucket:
              Fn::ImportValue: "root-ArtifactBucket"
        Type: S3
        BuildSpec: |
          version: 0.2
          env:
            shell: bash
            variables:
              ARTIFACT_BUCKET: ""
              STACK_NAME: ""
              REGION: ""
          phases:
            build:
              commands:
                - BLUE_VERSION=$(jq -r '.[] | select(.ParameterKey == "BlueVersion") | .ParameterValue' parameters.json)
                - GREEN_VERSION=$(jq -r '.[] | select(.ParameterKey == "GreenVersion") | .ParameterValue' parameters.json)
                - CHANGE_SET_NAME=$(echo "version-bump-${BLUE_VERSION}-to-${GREEN_VERSION}" | tr --squeeze-repeats [:punct:] '-')
                - CHANGE_SET_TYPE=UPDATE
                - >
                    aws cloudformation describe-stacks \
                      --stack-name ${STACK_NAME}-pipeline || CHANGE_SET_TYPE=CREATE

                - 'echo "Change Set: ${CHANGE_SET_NAME}" for ${CHANGE_SET_TYPE}'

                - >
                    aws cloudformation package \
                      --template-file pipeline.yaml \
                      --s3-bucket $ARTIFACT_BUCKET \
                      --s3-prefix cloudformation/package-templates/${STACK_NAME} \
                      --output-template-file pipeline.yaml;

                - aws s3 cp pipeline.yaml s3://${ARTIFACT_BUCKET}/cloudformation/package-templates/${STACK_NAME}/

                - >
                    aws cloudformation create-change-set \
                      --change-set-name $CHANGE_SET_NAME \
                      --stack-name ${STACK_NAME}-pipeline \
                      --change-set-type $CHANGE_SET_TYPE \
                      --capabilities CAPABILITY_NAMED_IAM \
                      --parameters file://parameters-pipeline.json \
                      --template-url "https://${ARTIFACT_BUCKET}.s3-${REGION}.amazonaws.com/cloudformation/package-templates/${STACK_NAME}/pipeline.yaml" \
                      --output text \
                      --query 'Id'

Outputs:
  GitHubCloneURL:
    Value: !Ref GitHubCloneURL
    Export:
      Name: !Sub "${ProjectSlug}-GitHubCloneURL"

  ManualVerificationEmail:
    Value: !Ref ManualVerificationEmail
    Export:
      Name: !Sub "${ProjectSlug}-ManualVerificationEmail"
