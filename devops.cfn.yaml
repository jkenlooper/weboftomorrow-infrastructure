AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Description: >
  This stack is meant to be manually created in the AWS Console by referring to
  the uploaded template in the ArtifactBucket.  Creates the BuildChangeSet
  codebuild resource that is used to create a change set from uploaded artifacts
  in a S3 bucket.

Metadata:
  Author: Jake Hickenlooper

Parameters:

  ProjectSlug:
    Type: String
    Description: >
      A one word name of the project. Used as part of the object key name for
      uploaded cloudformation templates and parameter JSON files.

      Will be used for root object name in
      buckets and other places. The Parameter Store in AWS Systems Manager will
      use this as the prefix (like /weboftomorrow/) for parameters.
    Default: "weboftomorrow"
    AllowedPattern: "[a-z0-9]+"
    MinLength: 3
    MaxLength: 50

  GitHubCloneURL:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/weboftomorrow/github-clone-url"
    Description: >
      The https clone URL for the project.

  ManualVerificationEmail:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/weboftomorrow/manual-verification-email"
    Description: >
      Email address to send a notification to when the staging site needs to be
      manually verified.

  GitBranchToBuildFrom:
    Type: String
    #Default: "release"
    #Description: >
    #  This is the branch that will be checked out when building the static.zip.
    #  It is also used when running the code build integration spec.
  PatternToTriggerBuild:
    Type: String
    #Default: "^refs/heads/release"
    #Description: >
    #  Set the git branch or tags pattern that will trigger a build.

  SecretHeaderString:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/weboftomorrow/secret-header-string"
    Description: >
      Secret string in the Referer header that CloudFront will use when
      accessing files from the S3 bucket. This blocks direct public access of
      the static sites bucket unless the Referer header with this string is
      used.

  FileCountThresholdForCacheInvalidations:
    Type: Number
    Default: 20
  CacheControlForTheme:
    Type: String
    Default: "max-age=31536000"
  CacheControlForMedia:
    Type: String
    Default: "max-age=1200, s-maxage=31536000"
  CacheControlForIndexHTML:
    Type: String
    Default: "max-age=0, s-maxage=1200"
  CacheControlDefault:
    Type: String
    Default: "max-age=300, s-maxage=31536000"


Resources:
  #TODO: do a md5sum of files in cleanup so it will trigger a build when needed

  BuildChangeSet:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub "${ProjectSlug}-BuildChangeSet"
      Artifacts:
        Type: NO_ARTIFACTS
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "${ProjectSlug}-BuildChangeSet"
          Status: ENABLED
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          -
            Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value:
              Fn::ImportValue: "root-ArtifactBucket"
          -
            Name: STACK_NAME
            Type: PLAINTEXT
            Value: !Ref ProjectSlug
          -
            Name: REGION
            Type: PLAINTEXT
            Value: !Ref "AWS::Region"
      QueuedTimeoutInMinutes: 10
      ServiceRole:
        Fn::ImportValue: root-weboftomorrowBuildChangeSetRoleArn
      TimeoutInMinutes: 10
      Source:
        Location: !Sub
          - "${artifactBucket}/cloudformation/source-templates/${ProjectSlug}/"
          -
            artifactBucket:
              Fn::ImportValue: "root-ArtifactBucket"
        Type: S3
        BuildSpec: |
          version: 0.2
          env:
            shell: bash
            parameter-store:
              MANUAL_VERIFICATION_EMAIL: /weboftomorrow/manual-verification-email
            variables:
              ARTIFACT_BUCKET: ""
              STACK_NAME: ""
              REGION: ""
          phases:
            build:
              commands:
                # Not sure if errexit actually does anything in an AWS CodeBuild environment
                - set -o errexit
                - TIMESTAMP=$(date "+%F_%H_%M")
                - BLUE_VERSION=$(jq -r '.[] | select(.ParameterKey == "BlueVersion") | .ParameterValue' parameters.json)
                - GREEN_VERSION=$(jq -r '.[] | select(.ParameterKey == "GreenVersion") | .ParameterValue' parameters.json)
                - CHANGE_SET_NAME=$(echo "version-bump-${BLUE_VERSION}-to-${GREEN_VERSION}-${TIMESTAMP}" | tr --squeeze-repeats [:punct:] '-')
                - CHANGE_SET_TYPE=UPDATE
                - TMP_DIR=$(mktemp -d)
                - |
                    jq --null-input --raw-output \
                      --arg manual_verification_email $MANUAL_VERIFICATION_EMAIL \
                      '[
                        {
                          "ParameterKey": "ManualVerificationEmail",
                          "ParameterValue": $manual_verification_email
                        }
                       ]' > $TMP_DIR/parameters.json
                ## build-change-set (template for ProjectSlug)
                - >
                    aws cloudformation describe-stacks \
                      --stack-name ${STACK_NAME} || CHANGE_SET_TYPE=CREATE

                - 'echo "Change Set for ${STACK_NAME}: ${CHANGE_SET_NAME}" for ${CHANGE_SET_TYPE}'

                - |
                    jq --raw-output --slurp \
                      '.[0] as $a1 | .[1] as $a2 | ($a1 + $a2)
                        | map(
                          select(
                            .ParameterKey == "ProjectSlug"
                            or .ParameterKey == "GitHubCloneURL"
                            or .ParameterKey == "ManualVerificationEmail"
                            or .ParameterKey == "GitBranchToBuildFrom"
                            or .ParameterKey == "PatternToTriggerBuild"
                            or .ParameterKey == "FileCountThresholdForCacheInvalidations"
                            or .ParameterKey == "SecretHeaderString"
                            or .ParameterKey == "CacheControlForTheme"
                            or .ParameterKey == "CacheControlForMedia"
                            or .ParameterKey == "CacheControlDefault"
                            or .ParameterKey == "CacheControlForIndexHTML"
                          )
                        )' \
                      parameters.json $TMP_DIR/parameters.json > $TMP_DIR/parameters-devops.json
                # Skip creating a package and change set if source template and
                # generated parameters file has not changed from last time.
                - >
                    aws s3 cp s3://${ARTIFACT_BUCKET}/cloudformation/checksums/${STACK_NAME}/devops.md5sum $TMP_DIR/devops.md5sum || echo 'No devops.md5sum found. Probably a new CloudFormation template.'
                - >
                    if md5sum --check --status $TMP_DIR/devops.md5sum; then \
                      echo 'No changes detected for devops template and parameters; skipping'
                    else \
                      aws cloudformation package \
                        --template-file devops.yaml \
                        --s3-bucket $ARTIFACT_BUCKET \
                        --s3-prefix cloudformation/package-templates/${STACK_NAME} \
                        --output-template-file $TMP_DIR/devops.yaml;
                      aws s3 cp $TMP_DIR/devops.yaml s3://${ARTIFACT_BUCKET}/cloudformation/package-templates/${STACK_NAME}/
                      #TODO: use --role-arn
                      # Would need to get the arn of the weboftomorrowCloudFormationRole from the root stack.
                      # Drop --capabilities CAPABILITY_NAMED_IAM \
                      aws cloudformation create-change-set \
                        --change-set-name $CHANGE_SET_NAME \
                        --stack-name ${STACK_NAME} \
                        --change-set-type $CHANGE_SET_TYPE \
                        --parameters file://$TMP_DIR/parameters-devops.json \
                        --template-url "https://${ARTIFACT_BUCKET}.s3-${REGION}.amazonaws.com/cloudformation/package-templates/${STACK_NAME}/devops.yaml" \
                        --output text \
                        --query 'Id' && \
                        md5sum parameters-devops.json devops.yaml > $TMP_DIR/devops.md5sum
                      aws s3 cp $TMP_DIR/devops.md5sum s3://${ARTIFACT_BUCKET}/cloudformation/checksums/${STACK_NAME}/devops.md5sum
                    fi

                ## pipeline
                - >
                    aws cloudformation describe-stacks \
                      --stack-name ${STACK_NAME}-pipeline || CHANGE_SET_TYPE=CREATE

                - 'echo "Change Set for ${STACK_NAME}-pipeline: ${CHANGE_SET_NAME}" for ${CHANGE_SET_TYPE}'
                - |
                    jq --raw-output --slurp \
                      '.[0] as $a1 | .[1] as $a2 | ($a1 + $a2)
                        | map(
                          select(
                            .ParameterKey == "ProjectSlug"
                            or .ParameterKey == "GitBranchToBuildFrom"
                            or .ParameterKey == "PatternToTriggerBuild"
                            or .ParameterKey == "SecretHeaderString"
                            or .ParameterKey == "CacheControlForTheme"
                            or .ParameterKey == "CacheControlForMedia"
                            or .ParameterKey == "CacheControlDefault"
                          )
                        )' \
                      parameters.json $TMP_DIR/parameter-store.json > parameters-pipeline.json
                # Skip creating a package and change set if source template and
                # generated parameters file has not changed from last time.
                - >
                    aws s3 cp s3://${ARTIFACT_BUCKET}/cloudformation/checksums/${STACK_NAME}/pipeline.md5sum $TMP_DIR/pipeline.md5sum || echo 'No pipeline.md5sum found. Probably a new CloudFormation template.'
                - >
                    if md5sum --check --status $TMP_DIR/pipeline.md5sum; then \
                      echo 'No changes detected for pipeline stack; skipping'
                    else \
                      aws cloudformation package \
                        --template-file pipeline.yaml \
                        --s3-bucket $ARTIFACT_BUCKET \
                        --s3-prefix cloudformation/package-templates/${STACK_NAME} \
                        --output-template-file $TMP_DIR/pipeline.yaml;
                      aws s3 cp $TMP_DIR/pipeline.yaml s3://${ARTIFACT_BUCKET}/cloudformation/package-templates/${STACK_NAME}/
                      #TODO: use --role-arn
                      # Drop --capabilities CAPABILITY_NAMED_IAM \
                      aws cloudformation create-change-set \
                        --change-set-name $CHANGE_SET_NAME \
                        --stack-name ${STACK_NAME}-pipeline \
                        --change-set-type $CHANGE_SET_TYPE \
                        --parameters file://parameters-pipeline.json \
                        --template-url "https://${ARTIFACT_BUCKET}.s3-${REGION}.amazonaws.com/cloudformation/package-templates/${STACK_NAME}/pipeline.yaml" \
                        --output text \
                        --query 'Id' && \
                        md5sum parameters-pipeline.json pipeline.yaml > $TMP_DIR/pipeline.md5sum
                      aws s3 cp $TMP_DIR/pipeline.md5sum s3://${ARTIFACT_BUCKET}/cloudformation/checksums/${STACK_NAME}/pipeline.md5sum
                    fi

                ## static-website
                - >
                    aws cloudformation describe-stacks \
                      --stack-name ${STACK_NAME}-static-website || CHANGE_SET_TYPE=CREATE

                - 'echo "Change Set for ${STACK_NAME}-static-website: ${CHANGE_SET_NAME}" for ${CHANGE_SET_TYPE}'
                - |
                    jq --raw-output --slurp \
                      '.[0] as $a1 | .[1] as $a2 | ($a1 + $a2)
                        | map(
                          select(
                            .ParameterKey == "ProjectSlug"
                            or .ParameterKey == "BlueVersion"
                            or .ParameterKey == "GreenVersion"
                            or .ParameterKey == "SecretHeaderString"
                            or .ParameterKey == "HostedZoneId"
                          )
                        )' \
                      parameters.json $TMP_DIR/parameter-store.json > parameters-static-website.json
                # Skip creating a package and change set if source template and
                # generated parameters file has not changed from last time.
                - >
                    aws s3 cp s3://${ARTIFACT_BUCKET}/cloudformation/checksums/${STACK_NAME}/static-website.md5sum $TMP_DIR/static-website.md5sum || echo 'No static-website.md5sum found. Probably a new CloudFormation template.'
                - >
                    if md5sum --check --status $TMP_DIR/static-website.md5sum; then \
                      echo 'No changes detected for static-website stack; skipping'
                    else \
                      aws cloudformation package \
                        --template-file static-website.yaml \
                        --s3-bucket $ARTIFACT_BUCKET \
                        --s3-prefix cloudformation/package-templates/${STACK_NAME} \
                        --output-template-file $TMP_DIR/static-website.yaml;
                      aws s3 cp $TMP_DIR/static-website.yaml s3://${ARTIFACT_BUCKET}/cloudformation/package-templates/${STACK_NAME}/
                      #TODO: use --role-arn
                      # Drop --capabilities CAPABILITY_NAMED_IAM \
                      aws cloudformation create-change-set \
                        --change-set-name $CHANGE_SET_NAME \
                        --stack-name ${STACK_NAME}-static-website \
                        --change-set-type $CHANGE_SET_TYPE \
                        --parameters file://parameters-static-website.json \
                        --template-url "https://${ARTIFACT_BUCKET}.s3-${REGION}.amazonaws.com/cloudformation/package-templates/${STACK_NAME}/static-website.yaml" \
                        --output text \
                        --query 'Id' && \
                        md5sum parameters-static-website.json static-website.yaml > $TMP_DIR/static-website.md5sum
                      aws s3 cp $TMP_DIR/static-website.md5sum s3://${ARTIFACT_BUCKET}/cloudformation/checksums/${STACK_NAME}/static-website.md5sum
                    fi
