AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Pipeline to deploy changes for the blue-green static site stack.

Metadata:
  Author: Jake Hickenlooper

Parameters:
  ProjectSlug:
    Type: String
    Description: >
      A one word name of the project. Will be used for root object name in
      buckets and other places. The Parameter Store in AWS Systems Manager will
      use this as the prefix (like /weboftomorrow/) for parameters.
    Default: "weboftomorrow"
    AllowedPattern: "[a-z0-9]+"
    MinLength: 3
    MaxLength: 50
  ArtifactBucket:
    Type: String
    Default: "build-artifacts-jkenlooper"
    MaxLength: 63

Resources:

  BuildChangeSet:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub "${ProjectSlug}-BuildChangeSet"
      Artifacts:
        Type: NO_ARTIFACTS
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "${ProjectSlug}-BuildChangeSet"
          Status: ENABLED
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          -
            Name: ARTIFACT_BUCKET
            Type: PLAINTEXT
            Value: !Ref ArtifactBucket
          -
            Name: STACK_NAME
            Type: PLAINTEXT
            Value: !Ref ProjectSlug
          -
            Name: REGION
            Type: PLAINTEXT
            Value: !Ref "AWS::Region"
      QueuedTimeoutInMinutes: 10
      ServiceRole: !GetAtt StaticBuildRole.Arn
      TimeoutInMinutes: 10
      Source:
        Location: !Sub "${ArtifactBucket}/cloud-formation/source-templates/${ProjectSlug}/"
        Type: S3
        BuildSpec: |
          version: 0.2
          env:
            shell: bash
            variables:
              ARTIFACT_BUCKET: ""
              STACK_NAME: ""
              REGION: ""
          phases:
            install:
              commands:
                - apt-get --yes install jq
            build:
              commands:
                - BLUE_VERSION=$(jq -r '.[] | select(.ParameterKey == "BlueVersion") | .ParameterValue' parameters.json)
                - GREEN_VERSION=$(jq -r '.[] | select(.ParameterKey == "GreenVersion") | .ParameterValue' parameters.json)
                - CHANGE_SET_NAME=$(echo "version-bump-${BLUE_VERSION}-to-${GREEN_VERSION}" | tr --squeeze-repeats [:punct:] '-')
                - CHANGE_SET_TYPE=UPDATE
                - >
                    aws cloudformation describe-stacks
                      --stack-name ${STACK_NAME}-pipeline || CHANGE_SET_TYPE=CREATE
                - echo "Creating Change Set: ${CHANGE_SET_NAME}"

                - >
                    aws cloudformation package
                      --template-file pipeline.yaml
                      --s3-bucket $ARTIFACT_BUCKET
                      --s3-prefix cloudformation/package-templates/${STACK_NAME}
                      --output-template-file pipeline.yaml;

                - > aws cloudformation create-change-set
                      --change-set-name $CHANGE_SET_NAME
                      --stack-name ${STACK_NAME}-pipeline
                      --change-set-type $CHANGE_SET_TYPE
                      --capabilities CAPABILITY_NAMED_IAM
                      --parameters file://parameters.json
                      --template-url "https://${ARTIFACT_BUCKET}.s3-${REGION}.amazonaws.com/cloudformation/package-templates/${STACK_NAME}/pipeline.yaml"
                      --output text \
                      --query 'Id' \

