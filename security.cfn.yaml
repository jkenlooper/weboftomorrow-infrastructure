AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Set Roles and Policies for weboftomorrow stack.

Metadata:
  Author: Jake Hickenlooper

Parameters:
  ProjectSlug:
    Type: "String"
    Description: Should not change. See build-change-set.cfn.yaml
    Default: "weboftomorrow"
    AllowedValues:
      - "weboftomorrow"

Resources:

  UpdateStaticWebsiteServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >
        For CodeBuild and Lambda projects that need to update objects in static
        website and artifact S3 buckets.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  UpdateStaticWebsitePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "UpdateStaticWebsitePolicy"
      Roles:
        - !Ref "UpdateStaticWebsiteServiceRole"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:DeleteObject"
              - "s3:ListObjectsV2"
            Resource:
              - !Sub
                - "${staticwebsitebucketarn}/${ProjectSlug}/*"
                -
                  staticwebsitebucketarn:
                    Fn::ImportValue: "root-StaticWebsiteBucketArn"
          -
            Effect: Allow
            Action:
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
            Resource:
              -
                Fn::ImportValue: "root-StaticWebsiteBucketArn"
          -
            Effect: Allow
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub
                - "${artifactbucketbucketarn}/staticbuild/${ProjectSlug}/*"
                -
                  artifactbucketbucketarn:
                    Fn::ImportValue: "root-ArtifactBucketArn"
          -
            Action:
              - "codepipeline:PutJobSuccessResult"
              - "codepipeline:PutJobFailureResult"
            Effect: "Allow"
            Resource: "*"
          -
            Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-*:log-stream:*"
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-*"


  StaticPipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  StaticPipelineManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Roles:
        - !Ref StaticPipelineServiceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
            Resource:
              - !Sub
                - "${pipelinebucketarn}/*"
                -
                  pipelinebucketarn:
                    Fn::ImportValue: "root-PipelineBucketArn"
          -
            Action:
              - cloudwatch:*
            Resource: "*"
            Effect: Allow
          -
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
            Resource: "*"
            Effect: Allow
          -
            Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:*:log-stream:*"
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:*"
          -
            Action:
            - cloudwatch:*
            - sns:*
            Resource: "*"
            Effect: Allow
          -
            Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          -
            Effect: Allow
            Action:
            - states:DescribeExecution
            - states:DescribeStateMachine
            - states:StartExecution
            Resource: "*"

  StaticPipelinePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "StaticPipelinePolicy"
      Roles:
        - !Ref StaticPipelineServiceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              - !Sub
                - "${artifactbucketarn}/staticbuild/${ProjectSlug}/*"
                -
                  artifactbucketarn:
                    Fn::ImportValue: "root-ArtifactBucketArn"
          -
            Effect: Allow
            Action:
              - s3:ListBucketVersions
              - s3:ListBucket
              - s3:GetBucketVersioning
            Resource:
              -
                Fn::ImportValue: "root-ArtifactBucketArn"
          -
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
            Effect: "Allow"
            Resource:
              - !Sub
                - "${staticwebsitebucketarn}/${ProjectSlug}/stage/*"
                -
                  staticwebsitebucketarn:
                    Fn::ImportValue: "root-StaticWebsiteBucketArn"
              - !Sub
                - "${staticwebsitebucketarn}/${ProjectSlug}/production/*"
                -
                  staticwebsitebucketarn:
                    Fn::ImportValue: "root-StaticWebsiteBucketArn"

  StaticBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >
        For CodeBuild projects that have the buildspec defined in the project's
        source code. The buildspec should be able to build the static site
        files. Should only need access to s3 artifact bucket, parameter-store,
        and logging.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
              - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  StaticBuildPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "StaticBuildPolicy"
      Roles:
        - !Ref StaticBuildServiceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ProjectSlug}/example_public_key"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ProjectSlug}/example_secret_key"
            Action:
              - "ssm:GetParameters"
          -
            Effect: Allow
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub
                - "${artifactbucketbucketarn}/staticbuild/${ProjectSlug}/*"
                -
                  artifactbucketbucketarn:
                    Fn::ImportValue: "root-ArtifactBucketArn"
          -
            Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-StaticBuild:log-stream:*"
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-StaticBuild"

  StaticTestServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: >
        For CodeBuild projects that have the buildspec defined in the project's
        source code for integration tests. Should only need access to logging.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
              - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  StaticTestPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "StaticTestPolicy"
      Roles:
        - !Ref StaticTestServiceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:CreateLogGroup"
              - "logs:PutLogEvents"
            Resource:
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-StaticTest:log-stream:*"
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:${ProjectSlug}-StaticTest"

Outputs:

  UpdateStaticWebsiteServiceRole:
    Value: !Ref UpdateStaticWebsiteServiceRole
    Export:
      Name: !Sub "${ProjectSlug}-UpdateStaticWebsiteServiceRole"
  UpdateStaticWebsiteServiceRoleArn:
    Value: !GetAtt UpdateStaticWebsiteServiceRole.Arn
    Export:
      Name: !Sub "${ProjectSlug}-UpdateStaticWebsiteServiceRoleArn"
  StaticBuildServiceRoleArn:
    Value: !GetAtt StaticBuildServiceRole.Arn
    Export:
      Name: !Sub "${ProjectSlug}-StaticBuildServiceRoleArn"
  StaticTestServiceRoleArn:
    Value: !GetAtt StaticTestServiceRole.Arn
    Export:
      Name: !Sub "${ProjectSlug}-StaticTestServiceRoleArn"
  StaticPipelineServiceRoleArn:
    Value: !GetAtt StaticPipelineServiceRole.Arn
    Export:
      Name: !Sub "${ProjectSlug}-StaticPipelineServiceRole"

