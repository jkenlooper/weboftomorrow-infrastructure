AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Set up the initial policies, users, and roles.

Metadata:
  Author: Jake Hickenlooper

Parameters:

  ProjectSlug:
    Type: String
    Description: >
      A one word name of the project. Will be used for root object name in
      buckets and other places. The Parameter Store in AWS Systems Manager will
      use this as the prefix (like /weboftomorrow/) for parameters.
    Default: "weboftomorrow"
    AllowedPattern: "[a-z0-9]+"
    MinLength: 3
    MaxLength: 50

Resources:

  # No longer using BuildArtifacts bucket. Use ArtifactBucket instead
  #BuildArtifacts:
  #  Type: 'AWS::S3::Bucket'
  #  DeletionPolicy: Retain
  #  UpdateReplacePolicy: Retain
  #  Properties:
  #    LifecycleConfiguration:
  #      Rules:
  #        -
  #          ExpirationInDays: 31
  #          NoncurrentVersionExpirationInDays: 20
  #          Status: Enabled
  #          Prefix: !Ref ProjectSlug
  #    PublicAccessBlockConfiguration:
  #      BlockPublicAcls: true
  #      BlockPublicPolicy: true
  #      IgnorePublicAcls: true
  #      RestrictPublicBuckets: true
  #    VersioningConfiguration:
  #      Status: Enabled

  #BuildArtifactsPolicy:
  #  Type: 'AWS::S3::BucketPolicy'
  #  DeletionPolicy: Retain
  #  UpdateReplacePolicy: Retain
  #  Properties:
  #    Bucket: !Ref BuildArtifacts
  #    PolicyDocument:
  #      Version: "2012-10-17"
  #      Statement:
  #        -
  #          Action: "s3:GetObject"
  #          Effect: "Allow"
  #          Principal:
  #            Service: 'codepipeline.amazonaws.com'
  #          Resource:
  #            - !Sub "${BuildArtifacts.Arn}/${ProjectSlug}/*"
  #        -
  #          Action: "s3:PutObject"
  #          Effect: "Allow"
  #          Principal:
  #            AWS: !GetAtt StaticBuildRole.Arn
  #          Resource:
  #            - !Sub "${BuildArtifacts.Arn}/${ProjectSlug}/*"

  # TODO: place static site files bucket here, too?

  BuildAndDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "codebuild.amazonaws.com"
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      RoleName: !Sub "${ProjectSlug}-BuildAndDeployRole"

  BuildAndDeployPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${ProjectSlug}-BuildAndDeployPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Action:
              - "logs:*"
            Effect: "Allow"
            Resource: "arn:aws:logs:*:*:*"
          -
            Action:
              - "codepipeline:PutJobSuccessResult"
              - "codepipeline:PutJobFailureResult"
            Effect: "Allow"
            Resource: "*"
          -
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ProjectSlug}-StaticBuild*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/StaticBuild*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ProjectSlug}-StaticTest*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/StaticTest*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ProjectSlug}-SyncGreenToBlue*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/SyncGreenToBlue*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ProjectSlug}-DeployGreenVersion*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/DeployGreenVersion*"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
          #-
          #  Effect: "Allow"
          #  Resource:
          #    - !Sub "${BuildArtifacts.Arn}/${ProjectSlug}"
          #    - !Sub "${BuildArtifacts.Arn}/${ProjectSlug}*"
          #  Action:
          #    - "s3:*"
          -
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group:${ProjectSlug}-StaticBuild-*"
            Action:
              - "codebuild:CreateReportGroup"
              - "codebuild:CreateReport"
              - "codebuild:UpdateReport"
              - "codebuild:BatchPutTestCases"
              - "codebuild:BatchPutCodeCoverages"
          -
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ProjectSlug}/*"
            Action:
              - "ssm:GetParameters"
          -
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ProjectSlug}-StaticPipeline"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ProjectSlug}-StaticPipeline:*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/StaticPipeline*"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
          #-
          #  Effect: "Allow"
          #  Action:
          #    - "s3:GetObject"
          #    - "s3:GetObjectVersion"
          #    - "s3:GetBucketAcl"
          #    - "s3:GetBucketLocation"
          #  Resource:
          #    - !Sub "${BuildArtifacts.Arn}/${ProjectSlug}"
          #    - !Sub "${BuildArtifacts.Arn}/${ProjectSlug}/*"
          #-
          #  Effect: "Allow"
          #  Action:
          #    - "s3:PutObject"
          #    - "s3:GetObjectVersion"
          #    - "s3:GetBucketAcl"
          #    - "s3:GetBucketLocation"
          #  Resource:
          #    - !Sub
          #        - "arn:aws:s3:::${bucketName}"
          #        -
          #          bucketName:
          #            Fn::ImportValue: !Sub "${ProjectSlug}-StaticSiteFilesBucketName"
          #    - !Sub
          #        - "arn:aws:s3:::${bucketName}/*"
          #        -
          #          bucketName:
          #            Fn::ImportValue: !Sub "${ProjectSlug}-StaticSiteFilesBucketName"
          -
            Action:
              - "iam:PassRole"
            Resource: "*"
            Effect: "Allow"
            Condition:
              StringEqualsIfExists:
                  "iam:PassedToService":
                    - "cloudformation.amazonaws.com"
                    - "elasticbeanstalk.amazonaws.com"
                    - "ec2.amazonaws.com"
                    - "ecs-tasks.amazonaws.com"
          -
            Action:
              - "codecommit:CancelUploadArchive"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetUploadArchiveStatus"
              - "codecommit:UploadArchive"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "codedeploy:CreateDeployment"
              - "codedeploy:GetApplication"
              - "codedeploy:GetApplicationRevision"
              - "codedeploy:GetDeployment"
              - "codedeploy:GetDeploymentConfig"
              - "codedeploy:RegisterApplicationRevision"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "codestar-connections:UseConnection"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "elasticbeanstalk:*"
              - "ec2:*"
              - "elasticloadbalancing:*"
              - "autoscaling:*"
              - "cloudwatch:*"
              - "s3:*"
              - "sns:*"
              - "cloudformation:*"
              - "rds:*"
              - "sqs:*"
              - "ecs:*"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "lambda:InvokeFunction"
              - "lambda:ListFunctions"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "opsworks:CreateDeployment"
              - "opsworks:DescribeApps"
              - "opsworks:DescribeCommands"
              - "opsworks:DescribeDeployments"
              - "opsworks:DescribeInstances"
              - "opsworks:DescribeStacks"
              - "opsworks:UpdateApp"
              - "opsworks:UpdateStack"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "cloudformation:CreateStack"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeStacks"
              - "cloudformation:UpdateStack"
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:SetStackPolicy"
              - "cloudformation:ValidateTemplate"
            Resource: "*"
            Effect: "Allow"
          -
            Action:
              - "codebuild:BatchGetBuilds"
              - "codebuild:StartBuild"
              - "codebuild:BatchGetBuildBatches"
              - "codebuild:StartBuildBatch"
            Resource: "*"
            Effect: "Allow"
          -
            Effect: "Allow"
            Action:
              - "devicefarm:ListProjects"
              - "devicefarm:ListDevicePools"
              - "devicefarm:GetRun"
              - "devicefarm:GetUpload"
              - "devicefarm:CreateUpload"
              - "devicefarm:ScheduleRun"
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - "servicecatalog:ListProvisioningArtifacts"
              - "servicecatalog:CreateProvisioningArtifact"
              - "servicecatalog:DescribeProvisioningArtifact"
              - "servicecatalog:DeleteProvisioningArtifact"
              - "servicecatalog:UpdateProduct"
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - "cloudformation:ValidateTemplate"
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - "ecr:DescribeImages"
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - "states:DescribeExecution"
              - "states:DescribeStateMachine"
              - "states:StartExecution"
            Resource: "*"
          -
            Effect: "Allow"
            Action:
              - "appconfig:StartDeployment"
              - "appconfig:StopDeployment"
              - "appconfig:GetDeployment"
            Resource: "*"
      Roles:
        - !Ref BuildAndDeployRole

Outputs:
  BuildAndDeployRoleArn:
    Description: ""
    Value: !GetAtt BuildAndDeployRole.Arn
    Export:
      Name: !Sub "${ProjectSlug}-BuildAndDeployRoleArn"
