AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  ProjectSlug:
    Type: String
    Description: >
      A one word name of the project. Will be used for root object name in
      buckets and other places. The Parameter Store in AWS Systems Manager will
      use this as the prefix (like /weboftomorrow/) for parameters.
    Default: "weboftomorrow"
    AllowedPattern: "[a-z0-9]+"
    MinLength: 3
    MaxLength: 50

Resources:

  # TODO: place static site files bucket here, too?

  CleanupLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      RoleName: !Sub "${ProjectSlug}-CleanupLambdaRole"

  CleanupLambdaPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${ProjectSlug}-CleanupLambdaPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Action:
              - "logs:*"
            Effect: "Allow"
            Resource: "arn:aws:logs:*:*:*"
          -
            Action:
              - "codepipeline:PutJobSuccessResult"
              - "codepipeline:PutJobFailureResult"
            Effect: "Allow"
            Resource: "*"
          #
          #Bucket policy allows this?
          #-
          #  Action:
          #    - "s3:DeleteObject"
          #    - "s3:ListBucket"
          #  Effect: "Allow"
          #  Resource:
          #    - !Sub "${StaticSiteFilesArn}/${ProjectSlug}/stage"
          #    - !Sub "${StaticSiteFilesArn}/${ProjectSlug}/stage/*"
      Roles:
        - !Ref CleanupLambdaRole

Outputs:
  CleanupLambdaRoleArn:
    Description: ""
    #Value: !Sub "arn:aws:iam::${AWS::AccountId}:role/weboftomorrow-CleanupLambdaRole"
    Value: !GetAtt CleanupLambdaRole.Arn
    Export:
      Name: !Sub "${ProjectSlug}-CleanupLambdaRoleArn"
